// Generated by view binder compiler. Do not edit!
package com.network.shopmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.network.shopmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAdminBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardDevices;

  @NonNull
  public final CardView cardSellers;

  @NonNull
  public final CardView cardShops;

  @NonNull
  public final CardView cardStorage;

  @NonNull
  public final ToolbarLayoutBinding toolbar;

  private FragmentAdminBinding(@NonNull LinearLayout rootView, @NonNull CardView cardDevices,
      @NonNull CardView cardSellers, @NonNull CardView cardShops, @NonNull CardView cardStorage,
      @NonNull ToolbarLayoutBinding toolbar) {
    this.rootView = rootView;
    this.cardDevices = cardDevices;
    this.cardSellers = cardSellers;
    this.cardShops = cardShops;
    this.cardStorage = cardStorage;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_devices;
      CardView cardDevices = ViewBindings.findChildViewById(rootView, id);
      if (cardDevices == null) {
        break missingId;
      }

      id = R.id.card_sellers;
      CardView cardSellers = ViewBindings.findChildViewById(rootView, id);
      if (cardSellers == null) {
        break missingId;
      }

      id = R.id.card_shops;
      CardView cardShops = ViewBindings.findChildViewById(rootView, id);
      if (cardShops == null) {
        break missingId;
      }

      id = R.id.card_storage;
      CardView cardStorage = ViewBindings.findChildViewById(rootView, id);
      if (cardStorage == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarLayoutBinding binding_toolbar = ToolbarLayoutBinding.bind(toolbar);

      return new FragmentAdminBinding((LinearLayout) rootView, cardDevices, cardSellers, cardShops,
          cardStorage, binding_toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
